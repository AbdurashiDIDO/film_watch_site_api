version: '3.8'

services:
  web_service:
    build: .
    command: gunicorn root.wsgi:application --bind 8000
    ports:
      - 8001:8000
    env_file:
      - .env
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - db_service

  db_service:
    image: postgres:15.3-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=1
      - POSTGRES_DB=film_watch_site

  #  rabbitmq:
  #    image: rabbitmq:3-management
  #    container_name: rabbitmq
  #    environment:
  #      - RABBITMQ_DEFAULT_USER=admin
  #      - RABBITMQ_DEFAULT_PASS=password
  #    ports:
  #      - 5675:5672
  #      - 15675:15672

  minio:
    image: minio/minio
    ports:
      - "9020:9000"
      - "9010:9001"
    environment:
      - MINIO_ACCESS_KEY=ErwI5Qwh9IYJLRTBrS9mvCL6Lh4QrxXV
      - MINIO_SECRET_KEY=adNMkS71ZpDxTEXQ
    volumes:
      - minio-data:/data
    command: server --console-address ":9001" /data


  nginx:
    build: ./nginx
    ports:
      - "7777:80"
      - "443:443"
    depends_on:
      - web_service
    logging:
      options:
        max-size: "15m"
        max-file: "3"
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
#      - ./certbot/conf:/etc/letsencrypt
#      - ./certbot/www:/var/www/docker/abdurashid/certbot
#  certbot:
#    image: certbot/certbot:latest
#    volumes:
#      - ./certbot/conf:/etc/letsencrypt
#      - ./certbot/www:/var/www/certbot
#    command: certonly --webroot -w /var/www/certbot/ --register-unsafely-without-email --dry-run -d

volumes:
  minio-data:
  postgres_data:
  static_volume:
  media_volume: